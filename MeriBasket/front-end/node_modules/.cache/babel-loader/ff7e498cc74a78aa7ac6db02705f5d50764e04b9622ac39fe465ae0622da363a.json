{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya_5c9gi56\\\\OneDrive\\\\Desktop\\\\Repo\\\\MeriBasket\\\\front-end\\\\src\\\\components\\\\DeliveryAgent\\\\DeliveryRequests.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AgentOrdreq() {\n  _s();\n  const [orderReqDetail, setDetail] = useState();\n  useEffect(() => {\n    fetchdata();\n  }, []);\n  const fetchdata = async () => {\n    const userDetail = sessionStorage.getItem(\"user\");\n    console.log(\"details \", userDetail);\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userDetail\n      })\n    };\n    await fetch('http://127.0.0.1:5000/api/Agent/Requests', options) // API endpoint of your Flask server\n    .then(response => response.json()).then(data => {\n      console.log(\"data \", data);\n      setDetail(data);\n      console.log(orderReqDetail);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const handleReq = ele => {\n    const userDetail = sessionStorage.getItem(\"user\");\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        uid: userDetail[0],\n        deliveryID: ele.deliveryID,\n        opt: ele.status\n      })\n    };\n    fetch('http://127.0.0.1:5000/api/Agent/Request_action', options) // API endpoint of your Flask server\n    .then(response => response.text()).then(data => {\n      window.alert(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Delivery Requests \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: orderReqDetail != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: orderReqDetail.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [item, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              name: \"Accept\",\n              onClick: () => handleReq({\n                status: \"Accept\",\n                deliveryID: item[0]\n              }),\n              children: \" Accept \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              name: \"Reject\",\n              onClick: () => handleReq({\n                status: \"Reject\",\n                deliveryID: item[0]\n              }),\n              children: \" Reject \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"No orders\"\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(AgentOrdreq, \"Lz5WUzWztgalpQ61huM+pT2cWa4=\");\n_c = AgentOrdreq;\nvar _c;\n$RefreshReg$(_c, \"AgentOrdreq\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AgentOrdreq","_s","orderReqDetail","setDetail","fetchdata","userDetail","sessionStorage","getItem","console","log","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","catch","error","handleReq","ele","uid","deliveryID","opt","status","text","window","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/priya_5c9gi56/OneDrive/Desktop/Repo/MeriBasket/front-end/src/components/DeliveryAgent/DeliveryRequests.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\nexport default function AgentOrdreq () {\r\n    \r\n    const [orderReqDetail, setDetail] = useState();\r\n\r\n    useEffect(()=>{\r\n\r\n        fetchdata()\r\n    \r\n    },[]);\r\n\r\n    const fetchdata = async () => {\r\n        const userDetail = sessionStorage.getItem(\"user\")\r\n        console.log(\"details \",userDetail)\r\n        const options = {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body : JSON.stringify({userDetail})\r\n        }\r\n\r\n        await fetch('http://127.0.0.1:5000/api/Agent/Requests',options)  // API endpoint of your Flask server\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(\"data \",data)\r\n            setDetail(data)\r\n            console.log(orderReqDetail)\r\n\r\n        })\r\n        .catch(error => {\r\n        console.error('Error:', error);\r\n    });\r\n    }\r\n\r\n    const handleReq = (ele) => {\r\n        const userDetail = sessionStorage.getItem(\"user\")\r\n        const options = {\r\n            method : 'POST',\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body : JSON.stringify({uid: userDetail[0], deliveryID: ele.deliveryID,opt: ele.status })\r\n        }\r\n        fetch('http://127.0.0.1:5000/api/Agent/Request_action',options)  // API endpoint of your Flask server\r\n        .then(response => response.text())\r\n        .then(data => {\r\n            window.alert(data)\r\n        })\r\n        .catch(error => {\r\n        console.error('Error:', error);\r\n    });\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1> Delivery Requests </h1>\r\n            <div>\r\n            {orderReqDetail!=null ?  <>{orderReqDetail.map((item,index) => (\r\n                <div key={index}>{item}\r\n                <div>\r\n                <button name = \"Accept\" onClick={() => handleReq({status: \"Accept\", deliveryID: item[0]})}> Accept </button>\r\n                <button name = \"Reject\" onClick={() => handleReq({status : \"Reject\", deliveryID: item[0]})}> Reject </button>\r\n            </div>\r\n                <br></br>\r\n                </div>\r\n            ))}</> : <>No orders</>}\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}